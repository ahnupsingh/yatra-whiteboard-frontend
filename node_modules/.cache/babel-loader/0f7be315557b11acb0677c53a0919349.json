{"ast":null,"code":"var _jsxFileName = \"/home/anup/yatra/testWhiteboardFrontend/src/components/nav/SideNavContent.js\";\nimport React from \"react\";\nimport { NavLink, Link, withRouter, matchPath } from \"react-router-dom\";\nconst $ = window.$;\n\nclass SideNavContent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isActiveUrl = (path, match, location) => {\n      return;\n\n      if (path && location.pathname.startsWith(path)) {\n        return true;\n      }\n\n      if (!match) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this._id = \"SideNavContent\";\n  }\n\n  componentDidMount() {\n    $(\".ui.accordion\").accordion();\n  }\n\n  render() {\n    const {\n      routes,\n      children\n    } = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui items m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"user circle teal icon huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"User Name\"), React.createElement(\"div\", {\n      class: \"meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `ui label mini`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Role 1\"), React.createElement(\"div\", {\n      className: `ui label mini`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Role 2\"))))), React.createElement(\"div\", {\n      class: \"meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ui icon mail outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"user@example.com\")), React.createElement(\"hr\", {\n      className: \"divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui secondary vertical menu accordion \",\n      id: \"kNav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, routes.map((mainNav, index) => {\n      let isActive = this.props.location.pathname.startsWith(mainNav.rootPath);\n      let activeClass = isActive ? \"active\" : \"\";\n      if (!mainNav.title) return;\n      if (typeof mainNav.accessible !== \"undefined\" && !mainNav.accessible) return;\n      if (mainNav.nav == false) return;\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, mainNav.title && React.createElement(NavLink, {\n        exact: true,\n        to: mainNav.path,\n        isActive: this.isActiveUrl.bind(this, mainNav.rootPath),\n        className: \"title item\",\n        style: {\n          paddingLeft: mainNav.icon ? \"auto\" : \"15px\"\n        },\n        activeStyle: {\n          color: \"#5d2e8e\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, mainNav.icon ? React.createElement(\"i\", {\n        className: `${mainNav.icon} icon`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }) : null, React.createElement(\"span\", {\n        className: \"mg-top-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, mainNav.title), mainNav.rootPath && !!mainNav.routes && React.createElement(\"i\", {\n        className: \"dropdown icon float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), mainNav.routes && React.createElement(\"div\", {\n        style: {\n          paddingLeft: \"20px\"\n        },\n        className: \"content \" + activeClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, mainNav.routes.map((nav, ndex) => {\n        if (!nav.title) return null;\n        let showNav = typeof nav.accessible === \"undefined\" || nav.accessible;\n\n        if (showNav) {\n          return React.createElement(\"div\", {\n            key: ndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(NavLink, {\n            className: \"item\",\n            to: nav.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, nav.icon && React.createElement(\"i\", {\n            className: `${nav.icon} icon`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }), nav.title, nav.count && React.createElement(\"div\", {\n            className: \"ui teal label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, nav.count)));\n        }\n      })));\n    })));\n  }\n\n}\n\nexport { SideNavContent };","map":{"version":3,"sources":["/home/anup/yatra/testWhiteboardFrontend/src/components/nav/SideNavContent.js"],"names":["React","NavLink","Link","withRouter","matchPath","$","window","SideNavContent","Component","constructor","props","isActiveUrl","path","match","location","pathname","startsWith","_id","componentDidMount","accordion","render","routes","children","map","mainNav","index","isActive","rootPath","activeClass","title","accessible","nav","bind","paddingLeft","icon","color","fontWeight","ndex","showNav","count"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NavLink, Link, withRouter, matchPath } from \"react-router-dom\";\n\nconst $ = window.$;\n\nclass SideNavContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this._id = \"SideNavContent\";\n    }\n\n    componentDidMount() {\n        $(\".ui.accordion\").accordion();\n    }\n\n    isActiveUrl = (path, match, location) => {\n        return;\n        if (path && location.pathname.startsWith(path)) {\n            return true;\n        }\n        if (!match) {\n            return false;\n        }\n        return true;\n    };\n    render() {\n        const { routes, children } = this.props;\n\n        return (\n            <React.Fragment>\n                <div className=\"ui items m-0\">\n                    <div class=\"ui item\">\n                        <div class=\"\">\n                            <i className=\"user circle teal icon huge\" />\n                        </div>\n                        <div class=\"content\">\n                            <h4>User Name</h4>\n                            <div class=\"meta\">\n                                <div className={`ui label mini`}>Role 1</div>\n                                <div className={`ui label mini`}>Role 2</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"meta\">\n                    <i className=\"ui icon mail outline\" />\n                    <small>user@example.com</small>\n                </div>\n\n                <hr className=\"divider\" />\n\n                <div\n                    className=\"ui secondary vertical menu accordion \"\n                    id=\"kNav\"\n                >\n                    {routes.map((mainNav, index) => {\n                        let isActive = this.props.location.pathname.startsWith(\n                            mainNav.rootPath\n                        );\n                        let activeClass = isActive ? \"active\" : \"\";\n                        if (!mainNav.title) return;\n                        if (\n                            typeof mainNav.accessible !== \"undefined\" &&\n                            !mainNav.accessible\n                        )\n                            return;\n                        if (mainNav.nav == false) return;\n                        return (\n                            <div key={index}>\n                                {mainNav.title && (\n                                    <NavLink\n                                        exact\n                                        to={mainNav.path}\n                                        isActive={this.isActiveUrl.bind(\n                                            this,\n                                            mainNav.rootPath\n                                        )}\n                                        className=\"title item\"\n                                        style={{\n                                            paddingLeft: mainNav.icon\n                                                ? \"auto\"\n                                                : \"15px\",\n                                        }}\n                                        activeStyle={{\n                                            color: \"#5d2e8e\",\n                                            fontWeight: \"bold\",\n                                        }}\n                                    >\n                                        {mainNav.icon ? (\n                                            <i\n                                                className={`${mainNav.icon} icon`}\n                                            />\n                                        ) : null}\n                                        <span className=\"mg-top-5\">\n                                            {mainNav.title}\n                                        </span>\n                                        {mainNav.rootPath &&\n                                            !!mainNav.routes && (\n                                                <i className=\"dropdown icon float-right\"></i>\n                                            )}\n                                    </NavLink>\n                                )}\n                                {mainNav.routes && (\n                                    <div\n                                        style={{ paddingLeft: \"20px\" }}\n                                        className={\"content \" + activeClass}\n                                    >\n                                        {mainNav.routes.map((nav, ndex) => {\n                                            if (!nav.title) return null;\n                                            let showNav =\n                                                typeof nav.accessible ===\n                                                    \"undefined\" ||\n                                                nav.accessible;\n                                            if (showNav) {\n                                                return (\n                                                    <div key={ndex}>\n                                                        <NavLink\n                                                            className=\"item\"\n                                                            to={nav.path}\n                                                        >\n                                                            {nav.icon && (\n                                                                <i\n                                                                    className={`${nav.icon} icon`}\n                                                                />\n                                                            )}\n                                                            {nav.title}\n                                                            {nav.count && (\n                                                                <div className=\"ui teal label\">\n                                                                    {nav.count}\n                                                                </div>\n                                                            )}\n                                                        </NavLink>\n                                                    </div>\n                                                );\n                                            }\n                                        })}\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport { SideNavContent };\n"]},"metadata":{},"sourceType":"module"}